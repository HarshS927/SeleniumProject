<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-17T15:39:34 IST" name="Suite" finished-at="2024-05-17T15:40:55 IST" duration-ms="80614">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" name="submitOrder" class="Practice.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-05-17T15:39:34 IST" name="Submit Order Test" finished-at="2024-05-17T15:40:27 IST" duration-ms="53242">
      <class name="Practice.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:39:34 IST" name="launchApplication" finished-at="2024-05-17T15:39:43 IST" duration-ms="8241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:39:43 IST" name="submitOrder" data-provider="getData" finished-at="2024-05-17T15:39:58 IST" duration-ms="14972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, item=ZARA COAT 3, email=anshika@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:39:58 IST" name="tearDown" finished-at="2024-05-17T15:39:58 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:39:58 IST" name="launchApplication" finished-at="2024-05-17T15:40:05 IST" duration-ms="7317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:40:05 IST" name="submitOrder" data-provider="getData" finished-at="2024-05-17T15:40:20 IST" duration-ms="15029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Prac@123456, item=ADIDAS ORIGINAL, email=compcreator484@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:40:20 IST" name="tearDown" finished-at="2024-05-17T15:40:20 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:40:20 IST" name="launchApplication" finished-at="2024-05-17T15:40:26 IST" duration-ms="5935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:40:26 IST" name="OrderHistoryTest" finished-at="2024-05-17T15:40:27 IST" depends-on-methods="Practice.Tests.SubmitOrderTest.submitOrder" duration-ms="906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.Tests.SubmitOrderTest@6e4566f1]" started-at="2024-05-17T15:40:27 IST" name="tearDown" finished-at="2024-05-17T15:40:27 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Practice.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
    <test started-at="2024-05-17T15:40:28 IST" name="Error Validations Test" finished-at="2024-05-17T15:40:55 IST" duration-ms="26927">
      <class name="Practice.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Practice.Tests.ErrorValidationsTest@74eb909f]" started-at="2024-05-17T15:40:28 IST" name="launchApplication" finished-at="2024-05-17T15:40:34 IST" duration-ms="5803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:Practice.Tests.ErrorValidationsTest@74eb909f]" started-at="2024-05-17T15:40:34 IST" name="LoginErrorValidation" finished-at="2024-05-17T15:40:35 IST" duration-ms="1044" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Practice.Tests.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.Tests.ErrorValidationsTest@74eb909f]" started-at="2024-05-17T15:40:35 IST" name="tearDown" finished-at="2024-05-17T15:40:35 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Practice.Tests.ErrorValidationsTest@74eb909f]" started-at="2024-05-17T15:40:36 IST" name="launchApplication" finished-at="2024-05-17T15:40:40 IST" duration-ms="4804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:Practice.Tests.ErrorValidationsTest@74eb909f]" started-at="2024-05-17T15:40:40 IST" name="ProductErrorValidation" finished-at="2024-05-17T15:40:54 IST" duration-ms="13970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Practice.Tests.ErrorValidationsTest@74eb909f]" started-at="2024-05-17T15:40:54 IST" name="tearDown" finished-at="2024-05-17T15:40:55 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Practice.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
  </suite> <!-- Suite -->
</testng-results>
